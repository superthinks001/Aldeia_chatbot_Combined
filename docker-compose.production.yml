version: '3.8'

services:
  # ==========================================================================
  # BACKEND API SERVICE
  # ==========================================================================
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      target: production
    container_name: aldeia-backend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/data/aldeia.db
      - DOCUMENTS_PATH=/app/data/documents
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
    networks:
      - aldeia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================================================
  # CHATBOT FRONTEND SERVICE
  # ==========================================================================
  chatbot-frontend:
    build:
      context: ./apps/chatbot-frontend
      dockerfile: Dockerfile
      target: production
    container_name: aldeia-chatbot-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.aldeia.com
    depends_on:
      - backend
    networks:
      - aldeia-network

  # ==========================================================================
  # REBUILD PLATFORM SERVICE
  # ==========================================================================
  rebuild-platform:
    build:
      context: ./apps/rebuild-platform
      dockerfile: Dockerfile
      target: production
    container_name: aldeia-rebuild-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.aldeia.com
      - NEXT_PUBLIC_CHATBOT_URL=https://chatbot.aldeia.com
    depends_on:
      - backend
    networks:
      - aldeia-network

  # ==========================================================================
  # NGINX REVERSE PROXY
  # ==========================================================================
  nginx:
    image: nginx:alpine
    container_name: aldeia-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      - backend
      - chatbot-frontend
      - rebuild-platform
    networks:
      - aldeia-network

  # ==========================================================================
  # MONITORING - PROMETHEUS
  # ==========================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: aldeia-prometheus-prod
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - aldeia-network

  # ==========================================================================
  # MONITORING - GRAFANA
  # ==========================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: aldeia-grafana-prod
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - aldeia-network

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  aldeia-network:
    driver: bridge

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  prometheus-data:
  grafana-data: